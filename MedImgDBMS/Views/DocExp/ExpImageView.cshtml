@model MedImgDBMS.ViewModels.ImgRepCmtViewModels

@{
    ViewBag.Title = "Expert Image View";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var message = ViewBag.SuccessMsg;
    int pageint = ViewBag.Page;
    string page = pageint.ToString();
    string sortOrder = ViewBag.Order;
    string currentFilter = ViewBag.Filter;
    string preCol = ViewBag.PreColumn;
    string path = ViewBag.link;
}

@section CustomScripts
{
    <script type="text/javascript">
    var message = '@message';
        if (message) {
            alert(message);
        }
    </script>
}

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @Html.DisplayFor(model => model.Image.ImgName).ToString().ToUpper()
                <small>@Url.Content(@path)</small>
            </h1>
            <ol class="breadcrumb">
                <li>
                    @Html.ActionLink("Home", "Index", "DocExp")
                </li>
                <li class="active">@Html.DisplayFor(model => model.Image.ImgName).ToString().ToUpper()</li>
            </ol>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <img src="@Url.Content(@path)" class="img-responsive">
        </div>
        <div class="col-md-4">
            <h3 style="margin-left: 0; margin-top: 0; margin-bottom: 5px;"><b><u>Patient</u></b></h3>
            <p class="pat-name">@Html.DisplayFor(model => model.Image.patient.PatFName) @Html.DisplayFor(model => model.Image.patient.PatLName)</p>
            <p><b>@Html.DisplayNameFor(model => model.Image.patient.DOB)</b>&nbsp @Html.DisplayFor(model => model.Image.patient.DOB, "{0:dd/MM/yyyy}")</p>
            <p><b>@Html.DisplayNameFor(model => model.Image.patient.Gender)</b>&nbsp @Html.DisplayFor(model => model.Image.patient.Gender)</p>
            <hr />
            <dl class="dl-horizontal-view">
                <dt>@Html.DisplayName("Image Status:")</dt>
                <dd class="clearfix">@Html.DisplayFor(model => model.Image.imagestatu.ImgStatusName)</dd>

                <dt>@Html.DisplayName("Image Creator:")</dt>
                <dd class="clearfix">@Html.DisplayFor(model => model.Image.Createuser.UserFName) @Html.DisplayFor(model => model.Image.Createuser.UserLName)</dd>

                <dt>@Html.DisplayName("Doctor:")</dt>
                <dd class="clearfix">@Html.DisplayFor(model => model.Image.Docuser.UserFName) @Html.DisplayFor(model => model.Image.Docuser.UserLName)</dd>

                <dt>@Html.DisplayName("Stomatologist:")</dt>
                <dd class="clearfix">@Html.DisplayFor(model => model.Image.Expuser.UserFName) @Html.DisplayFor(model => model.Image.Expuser.UserLName)</dd>
            </dl>
            <hr />
            @if (Model.Image.ImgStatus != 3)
            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group shadow-textarea">
                        <label for="ReportTextarea">Report:</label>
                        @Html.TextAreaFor(m => m.Report.RepText, new { @class = "form-control-textbox z-depth-1", @placeholder = "Write report here..." })
                        @Html.ValidationMessageFor(m => m.Report.RepText, "", new { @class = "text-danger" })
                    </div>
                    if (page != null)
                    {
                        @Html.Hidden("page", page)
                    }
                    if (sortOrder != null)
                    {
                        @Html.Hidden("sortOrder", sortOrder)
                    }
                    if (currentFilter != null)
                    {
                        @Html.Hidden("currentFilter", currentFilter)
                    }
                    if (preCol != null)
                    {
                        @Html.Hidden("preColumn", preCol)
                    }
                    <div class="form-group col-lg-12">
                        <button class="btn btn-primary" type="submit" name="submit" id="save" value="save">SAVE</button>
                        <button class="btn btn-primary" type="submit" name="submit" id="submit" value="submit" onclick="return confirm('Are you sure to submit? The report text cannot be modified after you submit.')">SUBMIT</button>
                    </div>
                }
            }
            else
            {
                <div>
                    <label>Report:</label>
                    <p>@Html.DisplayFor(model => model.Report.RepText)</p>
                </div>
            }
            <p>
                @Html.ActionLink("Back to List", "Index", new { page = ViewBag.Page, sortOrder = ViewBag.Order, currentFilter = ViewBag.Filter, preColumn = ViewBag.PreColumn })
            </p>
        </div>
    </div>
</div>
